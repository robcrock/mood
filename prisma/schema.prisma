// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entries JournalEntry[]
  analyses Analysis[]

  clerkId String @unique
  email   String @unique
}

model JournalEntry {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId   String
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  analysis Analysis?

  content String @db.Text

  @@unique([userId, id])
}

model Analysis {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId   String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  entryId String
  entry   JournalEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  mood      String
  summary   String @db.Text
  color     String
  negative Boolean
  subject   String
  sentimentScore   Float @default(0)

  @@unique([entryId])
  @@index([userId])
}
